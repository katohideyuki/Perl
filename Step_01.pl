# strict; が宣言されていると、変数がmy で宣言したプライベート変数か、パッケージ名を含めて完全に記述された変数しか使えなくなる
# 不正な変数名の使用によるクラッシュを避けるため
# 意図しない変数の利用をすぐに発見できるので、Perlのプログラムでは、必ずstrictモジュールを使うようにした方が良いらしい
use strict;

###################################
# デバッグ用 あれこれ
###################################
my $br = "\n";      # 改行用

###################################
# 変数定義
###################################
# スカラー変数 ※ ひとつものを変数に代入
my $intVal = 5;
my $strVal = "sample";

print "変数 intVal が生成されました : $intVal $br";
print "変数 strVal が生成されました : $strVal $br";
# print "$hoge";      # strictモジュールをつかっていないと、こんなhoge変数なくてもエラーにならなず実行できてしまう


# 配列
my @array = (1, 2);
print "配列変数で2つの要素が生成されました : @array $br";

## インデックス 3番目に「3」をセット
@array[2] = 3;
print "インデックス3番目に「3」が追加されました : @array $br";

